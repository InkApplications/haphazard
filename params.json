{"name":"Haphazard","tagline":"Functional testing can be really expensive. Haphazard will get you halfway there.","body":"Haphazard\r\n=========\r\n\r\nHaphazard is a library extension to Symfony's WebTestCase that provides a quick\r\nand dirty method to functional test basic pages.\r\n\r\nInstallation\r\n------------\r\n\r\nYou can install Haphazard through composer:\r\n\r\n    composer.phar require ink/haphazard\r\n\r\nUsage\r\n-----\r\n\r\n### Simple page load test\r\n\r\nWhen all you want to test is that the page at *least* loads properly, you can\r\nuse the `HaphazardTestCase::assertGet()` method. This will create a web client\r\nand assert that a response code of 200 is returned for the page.\r\n\r\n```php\r\n    use Ink\\Haphazard\\TestCase\\HaphazardTestCase;\r\n\r\n    class ProductControllerTest extends HaphazardTestCase\r\n    {\r\n        /**\r\n         * Test Index Action\r\n         */\r\n        public function testIndexAction()\r\n        {\r\n            $this->assertGet('index');\r\n        }\r\n    }\r\n```\r\n\r\n### Page with parameters\r\n\r\nIf the page you're testing requires parameters, you can pass those in as well.\r\n\r\n```php\r\n    /**\r\n     * Test View Action\r\n     */\r\n    public function testViewAction()\r\n    {\r\n        $this->assertGet('product-view', ['productId' => 1]);\r\n    }\r\n```\r\n\r\n### Different Status codes\r\n\r\nOccasionally you will want to test that pages return a different status code,\r\nfor example a 403 / Forbidden status code when an anonymous user should *not*\r\nbe able to access a given page.\r\n\r\n```php\r\n    /**\r\n     * Test Edit Action\r\n     */\r\n    public function testEditAction()\r\n    {\r\n        $this->assertGet('product-edit', ['productId' => 1], 403);\r\n    }\r\n```\r\n\r\n### Spoof Authentication Role\r\n\r\nIn order to effectively test that pages are open / closed to the correct users,\r\nthis library provides an easy way to make assertions using a specified role.\r\n\r\n```php\r\n    /**\r\n     * Test Edit Action\r\n     */\r\n    public function testEditAction()\r\n    {\r\n        // Allow our Admin role\r\n        $this->login('ROLE_ADMIN');\r\n        $this->assertGet('product-edit', ['productId' => 1], 200);\r\n\r\n        // Disallow Anonymous users\r\n        $this->clearLogin();\r\n        $this->assertGet('product-edit', ['productId' => 1], 403);\r\n    }\r\n```","google":"UA-44418436-2","note":"Don't delete this file! It's used internally to help with page regeneration."}